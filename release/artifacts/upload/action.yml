name: Upload
description: Upload artifacts
author: Wilfried Kopp <chevdor@gmail.com>
branding:
  icon: "package"
  color: "green"

inputs:
  aws_access_key_id:
    description: The AWS Key to be used. Make sure it has the required access rights
    required: true

  aws_secret_access_key:
    description: The AWS secret key
    required: true

  aws_bucket:
    description: AWS Bucket
    required: true

  aws_region:
    description: The AWS region
    required: true

  # TODO
  # public:
  #   description: >
  #     NOT IMPLEMENTED YET
  #     Whether the artifacts should be uploaded as public or not. Please note that some backends do not allow private uploads.
  #   default: "false"
  #   required: true

  mode:
    description: Upload mode. Can be only "standard" for now.
    required: true
    default: standard

  product:
    description: Product
    required: true

  version:
    description: version
    required: true

  arch:
    description: arch
    required: false

  file_name:
    description: input file
    required: true

  target_path:
    description: Target path
    required: true

  # TODO
  # labels:
  #   description: >
  #     NOT IMPLEMENTED YET
  #     An array of labels
  #   required: false

  overwrite:
    description: >
      Allows overwriting if the file already exists
    required: false
    default: "false"

  sha256:
    description: Generate a sha256 checksum
    default: "false"

  image:
    description: >
      Docker image to be used. This is usually not something you want to change
      unless you know what you are doing
    required: true
    default: "paritytech/releng-scripts"

outputs:
  url:
    description: >
      URL of the uploaded artifact
    value: ${{ steps.upload.outputs.json }}

runs:
  using: "composite"
  steps:
    - name: Fetch Docker image
      shell: bash
      env:
        IMAGE: ${{ inputs.image }}
      run: |
        docker pull -q $IMAGE
        docker pull -q paritytech/awscli

    - name: Upload ${{ inputs.file_name }}
      id: upload
      env:
        IMAGE: ${{ inputs.image }}
        MODE: ${{ inputs.mode }}
        FILE: ${{ inputs.file_name }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
        AWS_REGION: ${{ inputs.aws_region }}
        AWS_BUCKET: ${{ inputs.aws_bucket }}
        PRODUCT: ${{ inputs.product }}
        ARCH: ${{ inputs.arch }}
        VERSION: ${{ inputs.version }}
        OVERWRITE: ${{inputs.overwrite}}
        SHA256: ${{inputs.sha256}}
      shell: bash
      run: |
        # debug
        pwd
        ls -al
        ls -al ./action/release/artifacts/upload

        source ./lib.sh
        echo "MODE set to $MODE"
        check_mode_inputs $MODE

        shopt -s expand_aliases
        VOL=/data

        alias rs="docker run --rm -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_REGION -e AWS_BUCKET -v $PWD:$VOL $IMAGE"
        alias awscli="docker run --rm  -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_REGION -e AWS_BUCKET -e AWS_CONFIG_FILE paritytech/awscli"

        echo "Running rs image version: $(rs version)"
        echo "Running awscli image version: $(awscli aws --version)"

        echo "product:   ${PRODUCT}"
        echo "version:   ${VERSION}"
        echo "arch:      ${ARCH}"
        echo "Overwrite: ${OVERWRITE}"

        [[ "$OVERWRITE" == "true" ]] && OVERWRITE_ARGS=" --overwrite " || OVERWRITE_ARGS=""
        [[ ! -z "$ARCH" ]] && upload_path="${PRODUCT}/${VERSION}/${ARCH}" || upload_path="${PRODUCT}/${VERSION}"

        echo "upload_path: $upload_path"

        echo "Uploading $FILE"
        rs upload ${OVERWRITE_ARGS} \
          --bucket "${AWS_BUCKET}" \
          custom \
          ${upload_path} \
          s3 \
          "$VOL/${FILE}"

        if [[ "$SHA256" == "true" ]]; then
          echo "Creating sha256 cheksum"
          sha256sum "${FILE}" > "${FILE}.sha256"

          echo "Uploading sha256 checksum"
          rs upload ${OVERWRITE_ARGS} \
            --bucket "${AWS_BUCKET}" \
            custom \
            ${upload_path} \
            s3 \
            "$VOL/${FILE}.sha256"
        fi

        # TODO: we don't want to see ALL
        # echo "Check: https://${AWS_BUCKET}.s3.${AWS_DEFAULT_REGION}.amazonaws.com/index.html"
        awscli aws s3 ls ${AWS_BUCKET} --summarize
        awscli aws s3 ls ${AWS_BUCKET}/${PRODUCT} --human-readable --recursive
