{
  "directory": [
    {
      "name": "matrix-message",
      "description": "Send a message to a matrix channel",
      "author": "Martin Pugh (pugh@s3kr.it)",
      "inputs": {
        "server": {
          "description": "Matrix server hostname",
          "default": "matrix.org",
          "required": false
        },
        "room_id": {
          "description": "Matrix room ID, specified in channels advanced settings",
          "default": "",
          "required": true
        },
        "access_token": {
          "description": "Access token required to send to matrix server",
          "default": "",
          "required": true
        },
        "message": {
          "description": "Message to send in plaintext format",
          "default": "",
          "required": true
        }
      },
      "runs": {
        "using": "docker",
        "image": "Dockerfile"
      },
      "branding": {
        "icon": "message-square",
        "color": "gray-dark"
      }
    },
    {
      "name": "Download",
      "description": "Download artifacts",
      "author": "Wilfried Kopp <chevdor@gmail.com>",
      "branding": {
        "icon": "package",
        "color": "blue"
      },
      "inputs": {
        "chain": {
          "description": "Name of the chain, ie. polkadot\n",
          "required": true
        }
      },
      "outputs": {
        "json": {
          "description": "Foobar\n",
          "value": "${{ steps.build.outputs.json }}"
        }
      },
      "runs": {
        "using": "composite",
        "steps": [
          {
            "id": "foo",
            "name": "Foo",
            "shell": "bash",
            "run": "echo FOO\n"
          }
        ]
      }
    },
    {
      "name": "Upload",
      "description": "Upload artifacts",
      "author": "Wilfried Kopp <chevdor@gmail.com>",
      "branding": {
        "icon": "package",
        "color": "green"
      },
      "inputs": {
        "aws_access_key_id": {
          "description": "The AWS Key to be used. Make sure it has the required access rights",
          "required": true
        },
        "aws_secret_access_key": {
          "description": "The AWS secret key",
          "required": true
        },
        "aws_bucket": {
          "description": "AWS Bucket",
          "required": true
        },
        "aws_region": {
          "description": "The AWS region",
          "required": true
        },
        "mode": {
          "description": "Upload mode. Can be only \"standard\" for now.",
          "required": true,
          "default": "standard"
        },
        "product": {
          "description": "Product",
          "required": true
        },
        "version": {
          "description": "version",
          "required": true
        },
        "arch": {
          "description": "arch",
          "required": false
        },
        "file_name": {
          "description": "input file",
          "required": true
        },
        "target_path": {
          "description": "Target path",
          "required": true
        },
        "overwrite": {
          "description": "Allows overwriting if the file already exists\n",
          "required": false,
          "default": "false"
        },
        "sha256": {
          "description": "Generate a sha256 checksum",
          "default": "false"
        },
        "image": {
          "description": "Docker image to be used. This is usually not something you want to change unless you know what you are doing\n",
          "required": true,
          "default": "paritytech/releng-scripts"
        }
      },
      "outputs": {
        "url": {
          "description": "URL of the uploaded artifact\n",
          "value": "${{ steps.upload.outputs.json }}"
        }
      },
      "runs": {
        "using": "composite",
        "steps": [
          {
            "name": "Fetch Docker image",
            "shell": "bash",
            "env": {
              "IMAGE": "${{ inputs.image }}"
            },
            "run": "docker pull -q $IMAGE\ndocker pull -q paritytech/awscli\n"
          },
          {
            "name": "Upload ${{ inputs.file_name }}",
            "id": "upload",
            "env": {
              "IMAGE": "${{ inputs.image }}",
              "MODE": "${{ inputs.mode }}",
              "FILE": "${{ inputs.file_name }}",
              "AWS_ACCESS_KEY_ID": "${{ inputs.aws_access_key_id }}",
              "AWS_SECRET_ACCESS_KEY": "${{ inputs.aws_secret_access_key }}",
              "AWS_REGION": "${{ inputs.aws_region }}",
              "AWS_BUCKET": "${{ inputs.aws_bucket }}",
              "PRODUCT": "${{ inputs.product }}",
              "ARCH": "${{ inputs.arch }}",
              "VERSION": "${{ inputs.version }}",
              "OVERWRITE": "${{inputs.overwrite}}",
              "SHA256": "${{inputs.sha256}}"
            },
            "shell": "bash",
            "run": "source ./lib.sh\necho \"MODE set to $MODE\"\ncheck_mode_inputs $MODE\n\nshopt -s expand_aliases\nVOL=/data\n\nalias rs=\"docker run --rm -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_REGION -e AWS_BUCKET -v $PWD:$VOL $IMAGE\"\nalias awscli=\"docker run --rm  -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_REGION -e AWS_BUCKET -e AWS_CONFIG_FILE paritytech/awscli\"\n\necho \"Running rs image version: $(rs version)\"\necho \"Running awscli image version: $(awscli aws --version)\"\n\necho \"product:   ${PRODUCT}\"\necho \"version:   ${VERSION}\"\necho \"arch:      ${ARCH}\"\necho \"Overwrite: ${OVERWRITE}\"\n\n[[ \"$OVERWRITE\" == \"true\" ]] && OVERWRITE_ARGS=\" --overwrite \" || OVERWRITE_ARGS=\"\"\n[[ ! -z \"$ARCH\" ]] && upload_path=\"${PRODUCT}/${VERSION}/${ARCH}\" || upload_path=\"${PRODUCT}/${VERSION}\"\n\necho \"upload_path: $upload_path\"\n\necho \"Uploading $FILE\"\nrs upload ${OVERWRITE_ARGS} \\\n  --bucket \"${AWS_BUCKET}\" \\\n  custom \\\n  ${upload_path} \\\n  s3 \\\n  \"$VOL/${FILE}\"\n\nif [[ \"$SHA256\" == \"true\" ]]; then\n  echo \"Creating sha256 cheksum\"\n  sha256sum \"${FILE}\" > \"${FILE}.sha256\"\n\n  echo \"Uploading sha256 checksum\"\n  rs upload ${OVERWRITE_ARGS} \\\n    --bucket \"${AWS_BUCKET}\" \\\n    custom \\\n    ${upload_path} \\\n    s3 \\\n    \"$VOL/${FILE}.sha256\"\nfi\n\n# TODO: we don't want to see ALL\n# echo \"Check: https://${AWS_BUCKET}.s3.${AWS_DEFAULT_REGION}.amazonaws.com/index.html\"\nawscli aws s3 ls ${AWS_BUCKET} --summarize\nawscli aws s3 ls ${AWS_BUCKET}/${PRODUCT} --human-readable --recursive\n"
          }
        ]
      }
    }
  ]
}
